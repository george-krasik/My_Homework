{
	"info": {
		"_postman_id": "ca7b239e-68c1-4f4e-bcc9-8f0c9434797a",
		"name": "Group_35_HM2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28347217"
	},
	"item": [
		{
			"name": "first",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Check name\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.name).to.eql(\"George\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check age\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.age).to.eql(\"29\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"var reqData = request.data ;\r",
							"\r",
							"pm.test(\"Check name request\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.name).to.eql(reqData.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age request\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.age).to.eql(reqData.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary request\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.salary).to.eql(Number(reqData.salary));\r",
							"});\r",
							"\r",
							"console.log(jsonData.family)\r",
							"\r",
							"pm.test(\"Check salary*4\", function () {\r",
							"    \r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(reqData.salary*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "George",
							"type": "text"
						},
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var reqData = pm.request.url.query.toObject() ;\r",
							"\r",
							"pm.test(\"Check name request\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(reqData.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age request\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(reqData.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary request\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(Number(reqData.salary));\r",
							"});\r",
							"\r",
							"console.log(jsonData.family)\r",
							"\r",
							"pm.test(\"Dog name\", function (){\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property('name')\r",
							"})\r",
							"\r",
							"pm.test(\"Dog age\", function (){\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property('age')\r",
							"})\r",
							"\r",
							"pm.test(\"Dog luky\", function (){\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql('Luky')\r",
							"})\r",
							"\r",
							"pm.test(\"Dog age\", function (){\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(Number('4'))\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=George&age=29&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "George"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var reqData = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Check name request\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(reqData.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age request\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(Number(reqData.age));\r",
							"});\r",
							"\r",
							"console.log(reqData.salary);\r",
							"\r",
							"console.log(jsonData.salary);\r",
							"\r",
							"console.log(jsonData.salary[0]);\r",
							"\r",
							"console.log(jsonData.salary[1]);\r",
							"\r",
							"console.log(jsonData.salary[2]);\r",
							"\r",
							"pm.test(\"element 0\", function () {\r",
							"    pm.expect(jsonData.salary[0]).to.eql(Number(reqData.salary));\r",
							"});\r",
							"\r",
							"pm.test(\"element 1\", function () {\r",
							"    pm.expect(Number(jsonData.salary[1])).to.eql(reqData.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"element 2\", function () {\r",
							"    pm.expect(Number(jsonData.salary[2])).to.eql(reqData.salary*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\");\r",
							"\r",
							"pm.environment.set(\"age\");\r",
							"\r",
							"pm.environment.set(\"salary\");\r",
							"\r",
							"pm.environment.set(\"name\", jsonData.name);\r",
							"\r",
							"pm.environment.set(\"age\", jsonData.age);\r",
							"\r",
							"pm.environment.set(\"salary\", jsonData.salary[0]);\r",
							"\r",
							"for (var i = 0; i < jsonData.salary.length; i++) {\r",
							"    console.log(jsonData.salary[i])\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=George&age=29&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "George"
						},
						{
							"key": "age",
							"value": "29"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"var reqData = request.data;\r",
							"\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\")\r",
							"})\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\")\r",
							"})\r",
							"\r",
							"pm.test(\"jsonData to have person\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"person\")\r",
							"})\r",
							"\r",
							"pm.test(\"start_qa_salary2\", function () {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(+ reqData.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(reqData.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(reqData.salary*2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect (jsonData[\"qa_salary_after_1.5_year\"]).to.eql(reqData.salary*3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect (jsonData[\"qa_salary_after_3.5_years\"]).to.eql(reqData.salary*3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"u_name[1] = salary\", function () {\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql( + reqData.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"u_age = age\", function () {\r",
							"    pm.expect(jsonData.person.u_age).to.eql( + reqData.age);\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_5_years = salary*4.2\", function () {\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(reqData.salary*4.2);\r",
							"});\r",
							"\r",
							"for (key in jsonData.person) {\r",
							"  if (jsonData.person.hasOwnProperty(key)) {\r",
							"    //ключ = key\r",
							"    //значение = person[key]\r",
							"    console.log(\"Ключ = \" + key);\r",
							"    console.log(\"Значение = \" + jsonData.person[key]);\r",
							"  } // если объект person имеет key (если у person есть свойство key)\r",
							"} // перерабрать все ключи (свойства) в объекте\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}