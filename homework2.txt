TXT
 1. Создать внешний репозиторий c названием TXT - Перейти на сайт github.com и нажать "Create repository"
 2. Клонировать репозиторий TXT на локальный компьютер -  git clone https://github.com/george-krasik/TXT.git 
 3. Внутри локального TXT создать файл “new.txt” - touch new.txt
 4. Добавить файл под гит - git add new.txt
 5. Закоммитить файл - git commit -m "names"
 6. Отправить файл на внешний GitHub репозиторий - git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT - cat >> new.txt 
1) George Krasik
2) 28
3) no pets
4) 1000
 8. Отправить изменения на внешний репозиторий - сначала git commit -a -m , а после git push
 9. Создать файл preferences.txt - touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT - cat >> preferences.txt 
1) The Mask
2) Peaky Blinders
3) Hamburger
4) Summer
5) USA
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT - cat > skills.txt
1) Termnal
2) DevTools
3) Postman
4) SQL
5) etc.
 12. Сделать коммит в одну строку - git add . && git commit -m "comment"
 13. Отправить сразу 2 файла на внешний репозиторий - git push
 14. На веб интерфейсе создать файл bug_report.txt - Add file - Create new file - bug_report.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе - Commit changes
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT - дописал текст через веб интерфейс
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе - Commit changes
 18. Синхронизировать внешний gи локальный репозиторий TXT - git pull

JSON
 1. Создать внешний репозиторий c названием JSON - Перейти на сайт github.com и нажать "Create repository"
 2. Клонировать репозиторий JSON на локальный компьютер - git clone https://github.com/george-krasik/JSON.git
 3. Внутри локального JSON создать файл “new.json” - touch new.json 
 4. Добавить файл под гит - git add new.json
 5. Закоммитить файл - git commit -m "Add new file"
 6. Отправить файл на внешний GitHub репозиторий - git push
 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON - vim new.json
 8. Отправить изменения на внешний репозиторий - git commit -a -m "change1", git push
 9. Создать файл preferences.json - touch preferences.json
 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON - vim preferences.json
 11. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - vim skills.json
 12. Сделать коммит в одну строку - git add . && git commit -m "Add preferences and skills"
 13. Отправить сразу 2 файла на внешний репозиторий -  git push
 14. На веб интерфейсе создать файл bug_report.json - Add file - Create new file - bug_report.json
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе - Commit changes
 16. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON - Edit this file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе - Commit changes
 18. Синхронизировать внешний и локальный репозиторий JSON - git pull

XML
 1. Создать внешний репозиторий c названием XML - Перейти на сайт github.com и нажать "Create repository"  
 2. Клонировать репозиторий XML на локальный компьютер - git clone https://github.com/george-krasik/XML.git
 3. Внутри локального XML создать файл “new.xml” - touch new.xml
 4. Добавить файл под гит - git add new.xml
 5. Закоммитить файл - git commit -m "Add first file"
 6. Отправить файл на внешний GitHub репозиторий - git push
 7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML - vim new.xml
 8. Отправить изменения на внешний репозиторий - git push
 9. Создать файл preferences.xml - touch preferences.xml
 10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML - vim preferences.xml
 11. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML - vim skills.xml
 12. Сделать коммит в одну строку - git add . && git commit -m "Add preferences and skills"
 13. Отправить сразу 2 файла на внешний репозиторий - git push
 14. На веб интерфейсе создать файл bug_report.xml - Add file - Create new file - bug_report.xml
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе - Commit changes
 16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML - 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе - Commit changes
 18. Синхронизировать внешний и локальный репозиторий XML - git pull